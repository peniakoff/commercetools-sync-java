name: CI

on: [push]

jobs:
  build:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: serializing workflow runs
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Gradle
        run: ./gradlew clean setLibraryVersion
        env:
          SOURCE_PROJECT_KEY: java-sync-source
          SOURCE_CLIENT_ID:  ${{ secrets.SOURCE_CLIENT_ID }}
          SOURCE_CLIENT_SECRET:  ${{ secrets.SOURCE_CLIENT_SECRET }}
          TARGET_PROJECT_KEY: java-sync-target
          TARGET_CLIENT_ID: ${{ secrets.TARGET_CLIENT_ID }}
          TARGET_CLIENT_SECRET: ${{ secrets.TARGET_CLIENT_SECRET }}
      - name: Codecov
        uses: codecov/codecov-action@v1

  publish_staging:
    name: Publish to staging repo
    needs: build
    runs-on: ubuntu-latest
    env:
      GRGIT_USER: ${{ secrets.GRGIT_USER }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=libVersion::commercetools-sync-java-SNAPSHOT
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: status
        run: echo Artifact is named as ${{ steps.vars.outputs.libVersion }}.
      - name: deploy to sonatype
        run: ./gradlew setLibraryVersion -Dbuild.version="${{ steps.vars.outputs.tag }}" publishAllPublicationsToSonatypeRepository
        env:
          GITHUB_TAG: ${{ steps.vars.outputs.tag }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_PASSWORD: ${{ secrets.PGP_PASSWORD }}
